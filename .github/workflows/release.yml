name: Build and Release

on:
    push:
        tags:
            - '*'

env:
    RUST_BACKTRACE: '1'

jobs:
    build_and_release:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                target:
                    - x86_64-unknown-linux-gnu
                    # - aarch64-unknown-linux-musl

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Install Zig and Zigbuild
              run: |
                  sudo apt-get update
                  sudo apt-get install -y curl llvm-dev libclang-dev clang
                  sudo snap install zig --classic --beta
                  cargo install cargo-zigbuild
                  echo "" > .env

            - name: Add Rust Target
              run: rustup target add ${{matrix.target}}

            - name: Run Tests
              run: cargo test

            - name: Build Databurg Server
              run:
                  cargo zigbuild -p server --release --target ${{matrix.target}}
            - name: Build Databurg Client
              run:
                  cargo zigbuild -p client --release --target ${{matrix.target}}

            - name: Upload Artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: ${{matrix.target}}-artifacts
                  path: |
                      target/${{matrix.target}}/release/databurg
                      target/${{matrix.target}}/release/databurgd

            - name: Map Target to Alias
              id: map_target
              run: |
                  if [[ "${{ matrix.target }}" == "x86_64-unknown-linux-gnu" ]]; then
                      echo "TARGET_ALIAS=linux" >> $GITHUB_ENV
                  elif [[ "${{ matrix.target }}" == "aarch64-unknown-linux-musl" ]]; then
                      echo "TARGET_ALIAS=alpine" >> $GITHUB_ENV
                  else
                      echo "TARGET_ALIAS=${{ matrix.target }}" >> $GITHUB_ENV
                  fi

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v2
              with:
                  name: ${{github.ref_name}}-${{env.TARGET_ALIAS}}
                  files: |
                      target/${{matrix.target}}/release/databurg
                      target/${{matrix.target}}/release/databurgd
                  draft: false
                  prerelease: false
                  tag_name: ${{ github.ref }}
              env:
                  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
